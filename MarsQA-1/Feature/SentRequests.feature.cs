// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace MarsQA_1.Feature
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("SentRequests")]
    public partial class SentRequestsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "SentRequests.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "SentRequests", "\tAs a Seller\r\nI want the feature to see a ManageRequests to the Profile\r\nSo that\r" +
                    "\nThe people seeking for specific SentRequests can look into my details.\r\n\r\nAccep" +
                    "tance Criteria\r\nSeller is able to see the SentRequests", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01 Test User Sent A SentRequets record sucessfully")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void _01TestUserSentASentRequetsRecordSucessfully()
        {
            string[] tagsOfScenario = new string[] {
                    "mytag"};
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 Test User Sent A SentRequets record sucessfully", null, new string[] {
                        "mytag"});
#line 12
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                            "Category",
                            "Title",
                            "Message",
                            "Recipient"});
                table4.AddRow(new string[] {
                            "Business",
                            "Business Writing",
                            "hi",
                            "supriya"});
                table4.AddRow(new string[] {
                            "Video & Animation",
                            "Sketching",
                            "hi",
                            "supriya"});
                table4.AddRow(new string[] {
                            "Fun & Lifestyle",
                            "Dance Basics",
                            "hi",
                            "supriya"});
                table4.AddRow(new string[] {
                            "Fun & Lifestyle",
                            "Life Skills",
                            "hi",
                            "supriya"});
                table4.AddRow(new string[] {
                            "Fun & Lifestyle",
                            "gfgfgfg",
                            "Hi",
                            "supriya"});
#line 13
 testRunner.Given("User has Sent the following requests", ((string)(null)), table4, "Given ");
#line hidden
#line 20
 testRunner.When("User clicks \"Sent Requests\" link under Manage Requests tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                            "Category",
                            "Title",
                            "Message",
                            "Recipient",
                            "Status",
                            "Type",
                            "Date"});
                table5.AddRow(new string[] {
                            "Business",
                            "Business Writing",
                            "hi",
                            "supriya",
                            "Withdrawn",
                            "Exchange",
                            "14th Sep, 2021"});
                table5.AddRow(new string[] {
                            "Video & Animation",
                            "Sketching",
                            "hi",
                            "supriya",
                            "Withdrawn",
                            "Exchange",
                            "14th Sep, 2021"});
                table5.AddRow(new string[] {
                            "Fun & Lifestyle",
                            "Dance Basics",
                            "hi",
                            "supriya",
                            "Withdrawn",
                            "Exchange",
                            "14th Sep, 2021"});
                table5.AddRow(new string[] {
                            "Fun & Lifestyle",
                            "Life Skills",
                            "hi",
                            "supriya",
                            "Withdrawn",
                            "Exchange",
                            "14th Sep, 2021"});
                table5.AddRow(new string[] {
                            "Fun & Lifestyle",
                            "gfgfgfg",
                            "Hi",
                            "supriya",
                            "Withdrawn",
                            "Exchange",
                            "14th Sep, 2021"});
#line 21
 testRunner.Then("User Sent Requests list Page is displayed with the following data", ((string)(null)), table5, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
